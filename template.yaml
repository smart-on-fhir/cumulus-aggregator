AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  cumulus-aggregator
Transform:
- AWS::Serverless-2016-10-31

Parameters:
  BucketNameParameter:
    Type: String
    Default: cumulus-aggregator-site-counts

Resources:

  FetchUploadUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/fetch_upload_url.uploadUrlHandler
      Runtime: python3.9
      MemorySize: 128
      Timeout: 100
      Description: Generates a presigned URL for uploading files to S3
      Environment:
        Variables:
          BUCKET_NAME: !Sub '${BucketNameParameter}'
      Events:
        AddItem:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /
            Method: POST

  PowersetMergeFunction:
    Type: AWS::Serverless::Function
    Properties:
      Layers: [arn:aws:lambda:us-east-1:336392948345:layer:AWSSDKPandas-Python39:1]
      Handler: src/handlers/powerset_merge.powersetMergeHandler
      Runtime: python3.9
      MemorySize: 4096
      Timeout: 800
      Description: Merges and aggregates powerset count data
      Policies: AmazonS3ObjectLambdaExecutionRolePolicy

  PowersetMergeFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref PowersetMergeFunction
      Principal: s3.amazonaws.com
      #This can't be a ~Ref due to circular refs
      SourceArn: !Sub 'arn:aws:s3:::${BucketNameParameter}'
      SourceAccount: !Ref AWS::AccountId

  AggregatorBucket:
    Type: AWS::S3::Bucket
    DependsOn:
      - PowersetMergeFunctionPermission
    Properties:
      BucketName: !Sub '${BucketNameParameter}'
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt PowersetMergeFunction.Arn
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: 'site_uploads/'

  AggregatorBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AggregatorBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowListingObjects
            Effect: Allow
            Principal: "*"
            Action:
              - s3:ListBucket
            Resource: !Sub "arn:aws:s3:::${AggregatorBucket}"
          - Sid: AllowObjectModification
            Effect: Allow
            Principal: "*"
            Action:
              - s3:DeleteObject
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectTagging
            Resource: !Sub "arn:aws:s3:::${AggregatorBucket}/*"


  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod

# If you need to enable logging at the API Gateway level, uncomment this MethodSettings
# node. This should be left disabled for production since it is noisy and not useful
# for troubleshooting 95% of lambda issues.
#      MethodSettings:
#        - LoggingLevel: INFO
#          MetricsEnabled: True
#          ResourcePath: '/*' # allows for logging on any resource
#          HttpMethod: '*' # allows for logging on any method


Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
