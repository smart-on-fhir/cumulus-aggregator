AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  cumulus-aggregator
Transform:
- AWS::Serverless-2016-10-31

Parameters:
  BucketNameParameter:
    Type: String
    Default: cumulus-aggregator-site-counts
  GlueNameParameter:
    Type: String
    Default: cumulus-aggregator


Resources:

### Lambda Functions

  # Data Processing

  FetchAuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CumulusAggFetchAuthorizer
      Handler: src/handlers/site_upload/api_gateway_authorizer.lambda_handler
      Runtime: python3.9
      MemorySize: 128
      Timeout: 100
      Description: Validates credentials before providing signed urls

  FetchUploadUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CumulusAggFetchUploadUrl
      Handler: src/handlers/site_upload/fetch_upload_url.upload_url_handler
      Runtime: python3.9
      MemorySize: 128
      Timeout: 100
      Description: Generates a presigned URL for uploading files to S3
      Environment:
        Variables:
          BUCKET_NAME: !Sub '${BucketNameParameter}'
      Events:
        SiteUploadAPI:
          Type: Api
          Properties:
            RestApiId: !Ref SiteApiGateway
            Path: /
            Method: POST
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref BucketNameParameter

  PowersetMergeFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CumulusAggPowersetMerge
      Layers: [arn:aws:lambda:us-east-1:336392948345:layer:AWSSDKPandas-Python39:1]
      Handler: src/handlers/site_upload/powerset_merge.powerset_merge_handler
      Runtime: python3.9
      MemorySize: 4096
      Timeout: 800
      Description: Merges and aggregates powerset count data
      Environment:
        Variables:
          BUCKET_NAME: !Sub '${BucketNameParameter}'
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref BucketNameParameter

  # Dashboard API

  DashboardGetChartDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CumulusAggDashboardGetChartData
      Layers: [arn:aws:lambda:us-east-1:336392948345:layer:AWSSDKPandas-Python39:1]
      Handler: src/handlers/dashboard/get_chart_data.chart_data_handler
      Runtime: python3.9
      MemorySize: 2048
      Timeout: 100
      Description: Retrieve data for chart display in Cumulus Dashboard
      Environment:
        Variables:
          BUCKET_NAME: !Sub '${BucketNameParameter}'
      Events:
        GetChartDataAPI:
          Type: Api
          Properties:
            RestApiId: !Ref DashboardApiGateway
            Path: /chart_data/{subscription_id}
            Method: GET
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref BucketNameParameter
        - Statement:
          - Sid: GluePermissionsPolicy
            Effect: Allow
            Action:
            - glue:*
            Resource: '*'
        - Statement:
          - Sid: AthenaPermissionsPolicy
            Effect: Allow
            Action:
            - athena:*
            Resource: '*'

  DashboardGetMetadataFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CumulusAggDashboardGetMetadata
      Handler: src/handlers/dashboard/get_metadata.metadata_handler
      Runtime: python3.9
      MemorySize: 128
      Timeout: 100
      Description: Retrieve data about site uploads
      Environment:
        Variables:
          BUCKET_NAME: !Sub '${BucketNameParameter}'
      Events:
        GetMetadataAPI:
          Type: Api
          Properties:
            RestApiId: !Ref DashboardApiGateway
            Path: /metadata/
            Method: GET
        GetMetadataSiteAPI:
          Type: Api
          Properties:
            RestApiId: !Ref DashboardApiGateway
            Path: /metadata/{site}/
            Method: GET
        GetMetadataSiteStudyAPI:
          Type: Api
          Properties:
            RestApiId: !Ref DashboardApiGateway
            Path: /metadata/{site}/{study}
            Method: GET
        GetMetadataSiteStudySubscriptionAPI:
          Type: Api
          Properties:
            RestApiId: !Ref DashboardApiGateway
            Path: /metadata/{site}/{study}/{subscription}
            Method: GET
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref BucketNameParameter


### Lambda permissions

  PowersetMergeFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref PowersetMergeFunction
      Principal: s3.amazonaws.com
      #This can't be a !Ref due to circular refs
      SourceArn: !Sub 'arn:aws:s3:::${BucketNameParameter}'
      SourceAccount: !Ref AWS::AccountId

### S3 Buckets

  AggregatorBucket:
    Type: AWS::S3::Bucket
    DependsOn:
      - PowersetMergeFunctionPermission
    Properties:
      BucketName: !Sub '${BucketNameParameter}'
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt PowersetMergeFunction.Arn
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: 'site_upload/'

### Glue Resources

  GlueDB:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Sub '${GlueNameParameter}-db'
        Description: Database for serving data to Cumulus Dashboard

  GlueCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Sub '${GlueNameParameter}-crawler'
      DatabaseName: !Ref GlueDB
      Role: !GetAtt CrawlerRole.Arn
      Configuration: "{\"Version\":1.0,\"Grouping\":{\"TableLevelConfiguration\":4}}"
      RecrawlPolicy:
        RecrawlBehavior: CRAWL_EVERYTHING
      SchemaChangePolicy:
        DeleteBehavior: DEPRECATE_IN_DATABASE
        UpdateBehavior: UPDATE_IN_DATABASE
      Targets:
        S3Targets:
          - Path: !Ref AggregatorBucket
          - Exclusions: 
            - site_upload/**
            - latest/**
            - last_valid/**
            - error/**
            - csv_aggregates/**
            - metadata/**



### IAM Roles 

  FetchAuthorizerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole

  CrawlerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - glue.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
        - arn:aws:iam::aws:policy/AmazonAthenaFullAccess
      Policies:
        - PolicyName: S3BucketAccessPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Sub "arn:aws:s3:::${BucketNameParameter}/aggregates/*"

### API Gateways

# If you need to enable logging at the API Gateway level, uncomment the nodes 
# in this section. This should be left disabled for production since it is noisy
# and not useful for troubleshooting 95% of lambda issues.

  SiteApiGateway:
    Type: AWS::Serverless::Api
#    DependsOn: ApiCWLRoleArn 
    Properties:
      StageName: Prod
      Auth:
        Authorizers: 
          FetchAuth: 
            FunctionPayloadType: REQUEST
            FunctionArn: !GetAtt FetchAuthorizerFunction.Arn
            Identity:
              Headers: [Authorization]
        DefaultAuthorizer: FetchAuth
      Name: CumulusAggregatorSiteAPI
#      MethodSettings:
#        - LoggingLevel: INFO
#          MetricsEnabled: True
#          DataTraceEnabled: True
#          ResourcePath: '/*' # allows for logging on any resource
#          HttpMethod: '*' # allows for logging on any method

### Cloudwatch Logging infra for API gateway

# The following ensures that logs generated by SiteAPIGateway will actually get
# to cloudwatch for the gateway

#  ApiCWLRoleArn:
#    Type: AWS::ApiGateway::Account
#    Properties: 
#      CloudWatchRoleArn: !GetAtt CloudWatchRole.Arn

#  CloudWatchRole:
#      Type: AWS::IAM::Role
#      Properties:
#        AssumeRolePolicyDocument:
#          Version: '2012-10-17'
#          Statement:
#            Action: 'sts:AssumeRole'
#            Effect: Allow
#            Principal:
#              Service: apigateway.amazonaws.com
#        Path: /
#        ManagedPolicyArns:
#          - 'arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs'


  # TODO: we will add a gateway API key to this when the dashboard is ready
  # to handle it
  DashboardApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Name: CumulusAggregatorDashboardAPI

Outputs:
  SiteWebEndpoint:
    Description: "Site API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${SiteApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

  DashboardWebEndpoint:
    Description: "Dashboard API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${DashboardApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/"